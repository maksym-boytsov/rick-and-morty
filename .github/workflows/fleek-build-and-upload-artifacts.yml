name: Build and Upload Artifacts

on:
  push:
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        working-directory: .
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::install"
            echo "::set-output name=runner::yarn"
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::ci"
            echo "::set-output name=runner::npx --no-install"
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Install dependencies
        working-directory: .
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with custom script
        working-directory: .
        run: yarn build
      - name: Upload an artifact
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
  notification:
    runs-on: ubuntu-latest
    needs: [build]
    if: always()
    steps: 
      - uses: martialonline/workflow-status@v2
        id: check
      - if: steps.check.outputs.status == 'success'
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://seahorse-app-sjyj7.ondigitalocean.app/graphql'
          method: 'POST'
          data: '{"operationName":"FinishSiteDeployment","query":"mutation FinishSiteDeployment($build: ID!, $status: PluginCICDBuildStatus!) {\n  finishSiteDeployment(\n    build: $build\n    status: $status\n  ) {\n    id\n  }\n}","variables":{"build":"${{ github.run_id }}","status":"SUCCEEDED"}}'
          timeout: '10000'
      - if: steps.check.outputs.status == 'failure'
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://seahorse-app-sjyj7.ondigitalocean.app/graphql'
          method: 'POST'
          data: '{"operationName":"FinishSiteDeployment","query":"mutation FinishSiteDeployment($build: ID!, $status: PluginCICDBuildStatus!) {\n  finishSiteDeployment(\n    build: $build\n    status: $status\n  ) {\n    id\n  }\n}","variables":{"build":"${{ github.run_id }}","status":"FAILED"}}'
          timeout: '10000'
      - if: steps.check.outputs.status == 'cancelled'
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://seahorse-app-sjyj7.ondigitalocean.app/graphql'
          method: 'POST'
          data: '{"operationName":"FinishSiteDeployment","query":"mutation FinishSiteDeployment($build: ID!, $status: PluginCICDBuildStatus!) {\n  finishSiteDeployment(\n    build: $build\n    status: $status\n  ) {\n    id\n  }\n}","variables":{"build":"${{ github.run_id }}","status":"STOPPED"}}'
          timeout: '10000'


